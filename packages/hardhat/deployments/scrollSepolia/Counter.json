{
  "address": "0xC06Ea46b382D880eBDab7AfdD1976793626C658B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "cont",
          "type": "string"
        }
      ],
      "name": "addContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ownerCon",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sentOwner",
          "type": "address"
        }
      ],
      "name": "getAllMyContracts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ownerCon",
              "type": "address"
            }
          ],
          "internalType": "struct Counter.ContractDTO[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0748b6ce59d8735bd918f076801acd65dee606bed50d5d74503364ffbfca7200",
  "receipt": {
    "to": null,
    "from": "0xB6BC30f0A3ce4A94a9fA7B89161C918bfee2e413",
    "contractAddress": "0xC06Ea46b382D880eBDab7AfdD1976793626C658B",
    "transactionIndex": 0,
    "gasUsed": "518680",
    "logsBloom": "0x
    "blockHash": "0xb8ff0d5d3bd76c8aac29d0b351d3e0ec217cd56234a9ccba6e3e9c648605590d",
    "transactionHash": "0x0748b6ce59d8735bd918f076801acd65dee606bed50d5d74503364ffbfca7200",
    "logs": [],
    "blockNumber": 3390945,
    "cumulativeGasUsed": "518680",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "30850599be2b428b9c3ec92595656366",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"cont\",\"type\":\"string\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownerCon\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sentOwner\",\"type\":\"address\"}],\"name\":\"getAllMyContracts\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownerCon\",\"type\":\"address\"}],\"internalType\":\"struct Counter.ContractDTO[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"Counter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Counter {\\n    uint[] public tokenIds;\\n    uint private counter = 0;\\n    ContractDTO contr;\\n    ContractDTO[] public contracts;\\n\\n    //mapping(address => string) public reqOwner;\\n\\n    struct ContractDTO {\\n        string content;\\n        address ownerCon;\\n    }\\n\\n    \\n    function addContract(address rOwner, string memory cont) public {\\n        ContractDTO memory newContract = ContractDTO({\\n            content: cont,\\n            ownerCon: rOwner\\n        });\\n        contracts.push(newContract);\\n    }\\n\\n    function getAllMyContracts(address sentOwner) public view returns (ContractDTO[] memory){\\n        uint totalItemCount = contracts.length;      \\n        uint itemCount = 0;\\n\\n        for (uint i = 0; i < totalItemCount; i++) {\\n            if (contracts[i].ownerCon == sentOwner) {\\n                itemCount++;\\n            }\\n        }\\n\\n        ContractDTO[] memory items = new ContractDTO[](itemCount);\\n        uint currentIndex = 0;\\n\\n        for (uint i = 0; i < totalItemCount; i++) {\\n            if (contracts[i].ownerCon == sentOwner) {\\n                items[currentIndex] = contracts[i];\\n                currentIndex++;\\n            }\\n        }\\n\\n        return items;\\n    }\\n}\\n\",\"keccak256\":\"0xa9fddb5399fd3b9000f1af793280651f25ab033ae9362c2dfa911e23c49e68a4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b50610861806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634300e8ef14610051578063474da79a14610066578063d58778d614610090578063f5aba10f146100b1575b600080fd5b61006461005f3660046104b9565b6100d1565b005b61007961007436600461057b565b610162565b6040516100879291906105da565b60405180910390f35b6100a361009e36600461057b565b610227565b604051908152602001610087565b6100c46100bf366004610604565b610248565b6040516100879190610626565b604080518082019091528181526001600160a01b038316602082015260048054600181018255600091909152815182916002027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01908190610133908261072e565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055505050565b6004818154811061017257600080fd5b9060005260206000209060020201600091509050806000018054610195906106a5565b80601f01602080910402602001604051908101604052809291908181526020018280546101c1906106a5565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050600190930154919250506001600160a01b031682565b6000818154811061023757600080fd5b600091825260209091200154905081565b6004546060906000805b828110156102b957846001600160a01b031660048281548110610277576102776107ee565b60009182526020909120600160029092020101546001600160a01b0316036102a757816102a381610804565b9250505b806102b181610804565b915050610252565b5060008167ffffffffffffffff8111156102d5576102d56104a3565b60405190808252806020026020018201604052801561031b57816020015b6040805180820190915260608152600060208201528152602001906001900390816102f35790505b5090506000805b8481101561047c57866001600160a01b031660048281548110610347576103476107ee565b60009182526020909120600160029092020101546001600160a01b03160361046a576004818154811061037c5761037c6107ee565b90600052602060002090600202016040518060400160405290816000820180546103a5906106a5565b80601f01602080910402602001604051908101604052809291908181526020018280546103d1906106a5565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b5050509183525050600191909101546001600160a01b03166020909101528351849084908110610450576104506107ee565b6020026020010181905250818061046690610804565b9250505b8061047481610804565b915050610322565b509095945050505050565b80356001600160a01b038116811461049e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104cc57600080fd5b6104d583610487565b9150602083013567ffffffffffffffff808211156104f257600080fd5b818501915085601f83011261050657600080fd5b813581811115610518576105186104a3565b604051601f8201601f19908116603f01168101908382118183101715610540576105406104a3565b8160405282815288602084870101111561055957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561058d57600080fd5b5035919050565b6000815180845260005b818110156105ba5760208185018101518683018201520161059e565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006105ed6040830185610594565b905060018060a01b03831660208301529392505050565b60006020828403121561061657600080fd5b61061f82610487565b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561069757888303603f190185528151805187855261067188860182610594565b918901516001600160a01b0316948901949094529487019492509086019060010161064d565b509098975050505050505050565b600181811c908216806106b957607f821691505b6020821081036106d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561072957600081815260208120601f850160051c810160208610156107065750805b601f850160051c820191505b8181101561072557828155600101610712565b5050505b505050565b815167ffffffffffffffff811115610748576107486104a3565b61075c8161075684546106a5565b846106df565b602080601f83116001811461079157600084156107795750858301515b600019600386901b1c1916600185901b178555610725565b600085815260208120601f198616915b828110156107c0578886015182559484019460019091019084016107a1565b50858210156107de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161082457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d189ef8986090ba731fd373b4d8eb95fbcdf15706e3a627e96d88ddde11e9bf164736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634300e8ef14610051578063474da79a14610066578063d58778d614610090578063f5aba10f146100b1575b600080fd5b61006461005f3660046104b9565b6100d1565b005b61007961007436600461057b565b610162565b6040516100879291906105da565b60405180910390f35b6100a361009e36600461057b565b610227565b604051908152602001610087565b6100c46100bf366004610604565b610248565b6040516100879190610626565b604080518082019091528181526001600160a01b038316602082015260048054600181018255600091909152815182916002027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01908190610133908261072e565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055505050565b6004818154811061017257600080fd5b9060005260206000209060020201600091509050806000018054610195906106a5565b80601f01602080910402602001604051908101604052809291908181526020018280546101c1906106a5565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050600190930154919250506001600160a01b031682565b6000818154811061023757600080fd5b600091825260209091200154905081565b6004546060906000805b828110156102b957846001600160a01b031660048281548110610277576102776107ee565b60009182526020909120600160029092020101546001600160a01b0316036102a757816102a381610804565b9250505b806102b181610804565b915050610252565b5060008167ffffffffffffffff8111156102d5576102d56104a3565b60405190808252806020026020018201604052801561031b57816020015b6040805180820190915260608152600060208201528152602001906001900390816102f35790505b5090506000805b8481101561047c57866001600160a01b031660048281548110610347576103476107ee565b60009182526020909120600160029092020101546001600160a01b03160361046a576004818154811061037c5761037c6107ee565b90600052602060002090600202016040518060400160405290816000820180546103a5906106a5565b80601f01602080910402602001604051908101604052809291908181526020018280546103d1906106a5565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b5050509183525050600191909101546001600160a01b03166020909101528351849084908110610450576104506107ee565b6020026020010181905250818061046690610804565b9250505b8061047481610804565b915050610322565b509095945050505050565b80356001600160a01b038116811461049e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104cc57600080fd5b6104d583610487565b9150602083013567ffffffffffffffff808211156104f257600080fd5b818501915085601f83011261050657600080fd5b813581811115610518576105186104a3565b604051601f8201601f19908116603f01168101908382118183101715610540576105406104a3565b8160405282815288602084870101111561055957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561058d57600080fd5b5035919050565b6000815180845260005b818110156105ba5760208185018101518683018201520161059e565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006105ed6040830185610594565b905060018060a01b03831660208301529392505050565b60006020828403121561061657600080fd5b61061f82610487565b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561069757888303603f190185528151805187855261067188860182610594565b918901516001600160a01b0316948901949094529487019492509086019060010161064d565b509098975050505050505050565b600181811c908216806106b957607f821691505b6020821081036106d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561072957600081815260208120601f850160051c810160208610156107065750805b601f850160051c820191505b8181101561072557828155600101610712565b5050505b505050565b815167ffffffffffffffff811115610748576107486104a3565b61075c8161075684546106a5565b846106df565b602080601f83116001811461079157600084156107795750858301515b600019600386901b1c1916600185901b178555610725565b600085815260208120601f198616915b828110156107c0578886015182559484019460019091019084016107a1565b50858210156107de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161082457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d189ef8986090ba731fd373b4d8eb95fbcdf15706e3a627e96d88ddde11e9bf164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Counter.sol:Counter",
        "label": "tokenIds",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/Counter.sol:Counter",
        "label": "counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 10,
        "contract": "contracts/Counter.sol:Counter",
        "label": "contr",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(ContractDTO)19_storage"
      },
      {
        "astId": 14,
        "contract": "contracts/Counter.sol:Counter",
        "label": "contracts",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(ContractDTO)19_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ContractDTO)19_storage)dyn_storage": {
        "base": "t_struct(ContractDTO)19_storage",
        "encoding": "dynamic_array",
        "label": "struct Counter.ContractDTO[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ContractDTO)19_storage": {
        "encoding": "inplace",
        "label": "struct Counter.ContractDTO",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/Counter.sol:Counter",
            "label": "content",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/Counter.sol:Counter",
            "label": "ownerCon",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}